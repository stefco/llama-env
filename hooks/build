#!/bin/bash
# hooks/build
# https://docs.docker.com/docker-cloud/builds/advanced/

set -o nounset
set -o errexit
set -o pipefail

# $IMAGE_NAME var is injected into the build so the tag is correct.
echo "[***] Build hook running"

REPO="$(awk -F'/' '{print $(NF-1) "/" $NF}' <<<"${DOCKER_REPO}")"
NAME="${REPO}:${DOCKER_TAG}"
last_dockerfile=''

cleanup(){
    if [[ -f "${last_dockerfile}" ]]; then
        echo "Deleting old Dockerfile at ${last_dockerfile}"
        rm "${last_dockerfile}"
    else
        echo "No old Dockerfile found to delete."
    fi
}

trap "cleanup" EXIT

# # See if we have changed anything since the last tag.
# # If not, just reuse the old image.
# if current_tag="`git describe --tags`"; then
#     echo Current tag: $current_tag
#     if last_tag="`git describe --abbrev=0 "$current_tag"^`"; then
#         echo Last tag: $last_tag
#         if git show "$last_tag"^:${DOCKERFILE_PATH} >/dev/null; then
#             echo Last tag available locally, not fetching.
#         else
#             git fetch origin && echo Fetched from origin || echo Could not fetch
#         fi
#         last_dockerfile="$last_tag"-${DOCKERFILE_PATH}
#         if git show "$last_tag"^:${DOCKERFILE_PATH} >"$last_dockerfile"; then
#             echo Copied last dockerfile to $last_dockerfile
#             # diff returns True if there is *no* difference
#             if diff "${DOCKERFILE_PATH}" "$last_dockerfile"; then
#                 echo "Dockerfile $last_tag:$DOCKERFILE_PATH changed from"
#                 echo "$current_tag:$DOCKERFILE_PATH, pulling: ${NAME}"
#                 # try pulling the last version of the image
#                 last_image="${NAME}"-"${last_tag/v/}"  # remove prefixed 'v'
#                 if docker pull "${last_image}"; then
#                     echo "Pulled image ${last_image} successfully, skipping build."
#                     docker tag "${last_image}" "${NAME}"
#                     exit
#                 else
#                     echo "Failed to pull ${last_image}, rebuilding."
#                 fi
#             else
#                 echo "Dockerfile changed since last tag, rebuilding."
#             fi
#         else
#             echo "Could not show $last_tag:$DOCKERFILE_PATH, rebuilding."
#         fi
#     else
#         echo "Could not find a previous tag, rebuilding."
#     fi
# else
#     echo "No latest tag found, rebuilding."
# fi


docker build \
    --build-arg NAME="${NAME}" \
    --build-arg VERSION="$(git describe --tags --always)" \
    --build-arg COMMIT="$(git rev-parse HEAD)" \
    --build-arg URL="$(git config --get remote.origin.url)" \
    --build-arg BRANCH="$(git rev-parse --abbrev-ref HEAD)" \
    --build-arg DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
    --build-arg REPO="${REPO}" \
    --build-arg DOCKER_TAG="${DOCKER_TAG}" \
    --build-arg DOCKERFILE_PATH="${DOCKERFILE_PATH}" \
    --file "${DOCKERFILE_PATH}" \
    "$@" \
    --target llama-env \
    -t llama-env .

docker tag llama-env "${NAME}"

docker build \
    --build-arg NAME="${NAME}" \
    --build-arg VERSION="$(git describe --tags --always)" \
    --build-arg COMMIT="$(git rev-parse HEAD)" \
    --build-arg URL="$(git config --get remote.origin.url)" \
    --build-arg BRANCH="$(git rev-parse --abbrev-ref HEAD)" \
    --build-arg DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
    --build-arg REPO="${REPO}" \
    --build-arg DOCKER_TAG="${DOCKER_TAG}" \
    --build-arg DOCKERFILE_PATH="${DOCKERFILE_PATH}" \
    --file "${DOCKERFILE_PATH}" \
    "$@" \
    --target llama-env-ipy \
    -t llama-env-ipy .

docker tag llama-env-ipy "${REPO}-ipy:${DOCKER_TAG}"
